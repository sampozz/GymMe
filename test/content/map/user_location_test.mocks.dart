// Mocks generated by Mockito 5.4.5 from annotations
// in dima_project/test/content/map/user_location_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i8;

import 'package:dima_project/content/home/gym/activity/activity_model.dart'
    as _i10;
import 'package:dima_project/content/home/gym/gym_model.dart' as _i6;
import 'package:dima_project/content/map/location_model.dart' as _i3;
import 'package:dima_project/global_providers/gym_provider.dart' as _i9;
import 'package:dima_project/global_providers/map_provider.dart' as _i4;
import 'package:geolocator/geolocator.dart' as _i7;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLatLng_0 extends _i1.SmartFake implements _i2.LatLng {
  _FakeLatLng_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocations_1 extends _i1.SmartFake implements _i3.Locations {
  _FakeLocations_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MapProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapProvider extends _i1.Mock implements _i4.MapProvider {
  MockMapProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LatLng get savedPosition =>
      (super.noSuchMethod(
            Invocation.getter(#savedPosition),
            returnValue: _FakeLatLng_0(this, Invocation.getter(#savedPosition)),
          )
          as _i2.LatLng);

  @override
  double get savedZoom =>
      (super.noSuchMethod(Invocation.getter(#savedZoom), returnValue: 0.0)
          as double);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<_i3.Locations> getGymLocations(List<_i6.Gym>? gymList) =>
      (super.noSuchMethod(
            Invocation.method(#getGymLocations, [gymList]),
            returnValue: _i5.Future<_i3.Locations>.value(
              _FakeLocations_1(
                this,
                Invocation.method(#getGymLocations, [gymList]),
              ),
            ),
          )
          as _i5.Future<_i3.Locations>);

  @override
  _i5.Future<_i7.Position?> getUserLocation() =>
      (super.noSuchMethod(
            Invocation.method(#getUserLocation, []),
            returnValue: _i5.Future<_i7.Position?>.value(),
          )
          as _i5.Future<_i7.Position?>);

  @override
  Map<String, _i2.Marker> getMarkers(
    _i3.Locations? gyms, {
    dynamic Function(String, String)? onMarkerTap,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getMarkers, [gyms], {#onMarkerTap: onMarkerTap}),
            returnValue: <String, _i2.Marker>{},
          )
          as Map<String, _i2.Marker>);

  @override
  void saveMapState(_i2.LatLng? position, double? zoom) => super.noSuchMethod(
    Invocation.method(#saveMapState, [position, zoom]),
    returnValueForMissingStub: null,
  );

  @override
  void setInitialized(bool? value) => super.noSuchMethod(
    Invocation.method(#setInitialized, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [GymProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockGymProvider extends _i1.Mock implements _i9.GymProvider {
  MockGymProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<List<_i6.Gym>> getGymList() =>
      (super.noSuchMethod(
            Invocation.method(#getGymList, []),
            returnValue: _i5.Future<List<_i6.Gym>>.value(<_i6.Gym>[]),
          )
          as _i5.Future<List<_i6.Gym>>);

  @override
  _i5.Future<void> addGym(_i6.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#addGym, [gym]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateGym(_i6.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#updateGym, [gym]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeGym(_i6.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#removeGym, [gym]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addActivity(_i6.Gym? gym, _i10.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#addActivity, [gym, activity]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateActivity(_i6.Gym? gym, _i10.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#updateActivity, [gym, activity]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> removeActivity(_i6.Gym? gym, _i10.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#removeActivity, [gym, activity]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  int getGymIndex(_i6.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#getGymIndex, [gym]),
            returnValue: 0,
          )
          as int);

  @override
  _i5.Future<String> uploadImage(String? base64Image) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [base64Image]),
            returnValue: _i5.Future<String>.value(
              _i11.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
