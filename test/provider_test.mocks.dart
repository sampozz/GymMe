// Mocks generated by Mockito 5.4.5 from annotations
// in dima_project/test/provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i10;

import 'package:dima_project/content/bookings/booking_model.dart' as _i5;
import 'package:dima_project/content/bookings/booking_update_model.dart' as _i9;
import 'package:dima_project/content/bookings/bookings_provider.dart' as _i3;
import 'package:dima_project/content/home/gym/activity/activity_model.dart'
    as _i7;
import 'package:dima_project/content/home/gym/activity/book_slot/slot_model.dart'
    as _i8;
import 'package:dima_project/content/home/gym/gym_model.dart' as _i6;
import 'package:dima_project/global_providers/screen_provider.dart' as _i11;
import 'package:flutter/material.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMediaQueryData_0 extends _i1.SmartFake
    implements _i2.MediaQueryData {
  _FakeMediaQueryData_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookingsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingsProvider extends _i1.Mock implements _i3.BookingsProvider {
  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i4.Future<List<_i5.Booking>> getTodaysBookings() =>
      (super.noSuchMethod(
            Invocation.method(#getTodaysBookings, []),
            returnValue: _i4.Future<List<_i5.Booking>>.value(<_i5.Booking>[]),
            returnValueForMissingStub: _i4.Future<List<_i5.Booking>>.value(
              <_i5.Booking>[],
            ),
          )
          as _i4.Future<List<_i5.Booking>>);

  @override
  _i4.Future<List<_i5.Booking>?> getBookings() =>
      (super.noSuchMethod(
            Invocation.method(#getBookings, []),
            returnValue: _i4.Future<List<_i5.Booking>?>.value(),
            returnValueForMissingStub: _i4.Future<List<_i5.Booking>?>.value(),
          )
          as _i4.Future<List<_i5.Booking>?>);

  @override
  _i4.Future<bool> createBooking(
    _i6.Gym? gym,
    _i7.Activity? activity,
    _i8.Slot? slot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createBooking, [gym, activity, slot]),
            returnValue: _i4.Future<bool>.value(false),
            returnValueForMissingStub: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> removeBooking(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#removeBooking, [booking]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  int getBookingIndex(String? bookingId) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingIndex, [bookingId]),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  void addToCalendar(_i5.Booking? booking) => super.noSuchMethod(
    Invocation.method(#addToCalendar, [booking]),
    returnValueForMissingStub: null,
  );

  @override
  _i4.Future<List<_i9.BookingUpdate>> getBookingUpdates() =>
      (super.noSuchMethod(
            Invocation.method(#getBookingUpdates, []),
            returnValue: _i4.Future<List<_i9.BookingUpdate>>.value(
              <_i9.BookingUpdate>[],
            ),
            returnValueForMissingStub:
                _i4.Future<List<_i9.BookingUpdate>>.value(
                  <_i9.BookingUpdate>[],
                ),
          )
          as _i4.Future<List<_i9.BookingUpdate>>);

  @override
  _i4.Future<void> markUpdateAsRead(_i9.BookingUpdate? bookingUpdate) =>
      (super.noSuchMethod(
            Invocation.method(#markUpdateAsRead, [bookingUpdate]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ScreenProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockScreenProvider extends _i1.Mock implements _i11.ScreenProvider {
  @override
  _i2.MediaQueryData get screenData =>
      (super.noSuchMethod(
            Invocation.getter(#screenData),
            returnValue: _FakeMediaQueryData_0(
              this,
              Invocation.getter(#screenData),
            ),
            returnValueForMissingStub: _FakeMediaQueryData_0(
              this,
              Invocation.getter(#screenData),
            ),
          )
          as _i2.MediaQueryData);

  @override
  bool get useMobileLayout =>
      (super.noSuchMethod(
            Invocation.getter(#useMobileLayout),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set screenData(_i2.MediaQueryData? mqd) => super.noSuchMethod(
    Invocation.setter(#screenData, mqd),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  void addListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i10.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
