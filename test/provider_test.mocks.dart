// Mocks generated by Mockito 5.4.5 from annotations
// in dima_project/test/provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i12;

import 'package:dima_project/models/activity_model.dart' as _i9;
import 'package:dima_project/models/booking_model.dart' as _i7;
import 'package:dima_project/models/booking_update_model.dart' as _i11;
import 'package:dima_project/models/gym_model.dart' as _i8;
import 'package:dima_project/models/instructor_model.dart' as _i20;
import 'package:dima_project/models/location_model.dart' as _i4;
import 'package:dima_project/models/slot_model.dart' as _i10;
import 'package:dima_project/models/subscription_model.dart' as _i16;
import 'package:dima_project/models/user_model.dart' as _i15;
import 'package:dima_project/providers/bookings_provider.dart' as _i5;
import 'package:dima_project/providers/gym_provider.dart' as _i18;
import 'package:dima_project/providers/instructor_provider.dart' as _i19;
import 'package:dima_project/providers/map_provider.dart' as _i22;
import 'package:dima_project/providers/screen_provider.dart' as _i13;
import 'package:dima_project/providers/slot_provider.dart' as _i21;
import 'package:dima_project/providers/theme_provider.dart' as _i24;
import 'package:dima_project/providers/user_provider.dart' as _i14;
import 'package:flutter/material.dart' as _i2;
import 'package:geolocator/geolocator.dart' as _i23;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMediaQueryData_0 extends _i1.SmartFake
    implements _i2.MediaQueryData {
  _FakeMediaQueryData_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLatLng_1 extends _i1.SmartFake implements _i3.LatLng {
  _FakeLatLng_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocations_2 extends _i1.SmartFake implements _i4.Locations {
  _FakeLocations_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDateTime_3 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookingsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingsProvider extends _i1.Mock implements _i5.BookingsProvider {
  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<List<_i7.Booking>> getTodaysBookings() =>
      (super.noSuchMethod(
            Invocation.method(#getTodaysBookings, []),
            returnValue: _i6.Future<List<_i7.Booking>>.value(<_i7.Booking>[]),
            returnValueForMissingStub: _i6.Future<List<_i7.Booking>>.value(
              <_i7.Booking>[],
            ),
          )
          as _i6.Future<List<_i7.Booking>>);

  @override
  _i6.Future<List<_i7.Booking>?> getBookings() =>
      (super.noSuchMethod(
            Invocation.method(#getBookings, []),
            returnValue: _i6.Future<List<_i7.Booking>?>.value(),
            returnValueForMissingStub: _i6.Future<List<_i7.Booking>?>.value(),
          )
          as _i6.Future<List<_i7.Booking>?>);

  @override
  _i6.Future<bool> createBooking(
    _i8.Gym? gym,
    _i9.Activity? activity,
    _i10.Slot? slot,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createBooking, [gym, activity, slot]),
            returnValue: _i6.Future<bool>.value(false),
            returnValueForMissingStub: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> removeBooking(_i7.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#removeBooking, [booking]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  int getBookingIndex(String? bookingId) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingIndex, [bookingId]),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  void addToCalendar(_i7.Booking? booking) => super.noSuchMethod(
    Invocation.method(#addToCalendar, [booking]),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<List<_i11.BookingUpdate>> getBookingUpdates() =>
      (super.noSuchMethod(
            Invocation.method(#getBookingUpdates, []),
            returnValue: _i6.Future<List<_i11.BookingUpdate>>.value(
              <_i11.BookingUpdate>[],
            ),
            returnValueForMissingStub:
                _i6.Future<List<_i11.BookingUpdate>>.value(
                  <_i11.BookingUpdate>[],
                ),
          )
          as _i6.Future<List<_i11.BookingUpdate>>);

  @override
  _i6.Future<void> markUpdateAsRead(_i11.BookingUpdate? bookingUpdate) =>
      (super.noSuchMethod(
            Invocation.method(#markUpdateAsRead, [bookingUpdate]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [ScreenProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockScreenProvider extends _i1.Mock implements _i13.ScreenProvider {
  @override
  _i2.MediaQueryData get screenData =>
      (super.noSuchMethod(
            Invocation.getter(#screenData),
            returnValue: _FakeMediaQueryData_0(
              this,
              Invocation.getter(#screenData),
            ),
            returnValueForMissingStub: _FakeMediaQueryData_0(
              this,
              Invocation.getter(#screenData),
            ),
          )
          as _i2.MediaQueryData);

  @override
  bool get useMobileLayout =>
      (super.noSuchMethod(
            Invocation.getter(#useMobileLayout),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set screenData(_i2.MediaQueryData? mqd) => super.noSuchMethod(
    Invocation.setter(#screenData, mqd),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [UserProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProvider extends _i1.Mock implements _i14.UserProvider {
  @override
  bool get isLoggedIn =>
      (super.noSuchMethod(
            Invocation.getter(#isLoggedIn),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isAdmin =>
      (super.noSuchMethod(
            Invocation.getter(#isAdmin),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<List<_i15.User>> getUserList() =>
      (super.noSuchMethod(
            Invocation.method(#getUserList, []),
            returnValue: _i6.Future<List<_i15.User>>.value(<_i15.User>[]),
            returnValueForMissingStub: _i6.Future<List<_i15.User>>.value(
              <_i15.User>[],
            ),
          )
          as _i6.Future<List<_i15.User>>);

  @override
  _i6.Future<_i15.User?> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i6.Future<_i15.User?>.value(),
            returnValueForMissingStub: _i6.Future<_i15.User?>.value(),
          )
          as _i6.Future<_i15.User?>);

  @override
  _i6.Future<_i15.User?> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i6.Future<_i15.User?>.value(),
            returnValueForMissingStub: _i6.Future<_i15.User?>.value(),
          )
          as _i6.Future<_i15.User?>);

  @override
  _i6.Future<String?> signUp(
    String? email,
    String? password,
    String? fullName,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [email, password, fullName]),
            returnValue: _i6.Future<String?>.value(),
            returnValueForMissingStub: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<_i15.User?> createUser(String? fullName) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [fullName]),
            returnValue: _i6.Future<_i15.User?>.value(),
            returnValueForMissingStub: _i6.Future<_i15.User?>.value(),
          )
          as _i6.Future<_i15.User?>);

  @override
  _i6.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<_i15.User?> fetchUser() =>
      (super.noSuchMethod(
            Invocation.method(#fetchUser, []),
            returnValue: _i6.Future<_i15.User?>.value(),
            returnValueForMissingStub: _i6.Future<_i15.User?>.value(),
          )
          as _i6.Future<_i15.User?>);

  @override
  _i6.Future<String?> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i6.Future<String?>.value(),
            returnValueForMissingStub: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<List<_i15.User>> getUsersByIds(List<String>? ids) =>
      (super.noSuchMethod(
            Invocation.method(#getUsersByIds, [ids]),
            returnValue: _i6.Future<List<_i15.User>>.value(<_i15.User>[]),
            returnValueForMissingStub: _i6.Future<List<_i15.User>>.value(
              <_i15.User>[],
            ),
          )
          as _i6.Future<List<_i15.User>>);

  @override
  _i6.Future<void> addFavouriteGym(String? gymId) =>
      (super.noSuchMethod(
            Invocation.method(#addFavouriteGym, [gymId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> removeFavouriteGym(String? gymId) =>
      (super.noSuchMethod(
            Invocation.method(#removeFavouriteGym, [gymId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  bool isGymInFavourites(String? gymId) =>
      (super.noSuchMethod(
            Invocation.method(#isGymInFavourites, [gymId]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<void> updateUserProfile({
    String? displayName,
    String? photoURL,
    String? phoneNumber,
    String? address,
    String? taxCode,
    String? birthPlace,
    DateTime? birthDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [], {
              #displayName: displayName,
              #photoURL: photoURL,
              #phoneNumber: phoneNumber,
              #address: address,
              #taxCode: taxCode,
              #birthPlace: birthPlace,
              #birthDate: birthDate,
            }),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addSubscription(
    _i15.User? user,
    _i16.Subscription? subscription,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addSubscription, [user, subscription]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteAccount(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, [uid]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateMedicalCertificate(
    String? uid,
    DateTime? certificateExpDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateMedicalCertificate, [
              uid,
              certificateExpDate,
            ]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String> uploadImage(String? base64Image) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [base64Image]),
            returnValue: _i6.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
            returnValueForMissingStub: _i6.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [GymProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockGymProvider extends _i1.Mock implements _i18.GymProvider {
  @override
  bool get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<List<_i8.Gym>> getGymList() =>
      (super.noSuchMethod(
            Invocation.method(#getGymList, []),
            returnValue: _i6.Future<List<_i8.Gym>>.value(<_i8.Gym>[]),
            returnValueForMissingStub: _i6.Future<List<_i8.Gym>>.value(
              <_i8.Gym>[],
            ),
          )
          as _i6.Future<List<_i8.Gym>>);

  @override
  _i6.Future<void> addGym(_i8.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#addGym, [gym]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateGym(_i8.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#updateGym, [gym]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> removeGym(_i8.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#removeGym, [gym]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addActivity(_i8.Gym? gym, _i9.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#addActivity, [gym, activity]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateActivity(_i8.Gym? gym, _i9.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#updateActivity, [gym, activity]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> removeActivity(_i8.Gym? gym, _i9.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#removeActivity, [gym, activity]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  int getGymIndex(_i8.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#getGymIndex, [gym]),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  _i6.Future<String> uploadImage(String? base64Image) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [base64Image]),
            returnValue: _i6.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
            returnValueForMissingStub: _i6.Future<String>.value(
              _i17.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
          )
          as _i6.Future<String>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [InstructorProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockInstructorProvider extends _i1.Mock
    implements _i19.InstructorProvider {
  @override
  bool get isLoading =>
      (super.noSuchMethod(
            Invocation.getter(#isLoading),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<List<_i20.Instructor>?> getInstructorList() =>
      (super.noSuchMethod(
            Invocation.method(#getInstructorList, []),
            returnValue: _i6.Future<List<_i20.Instructor>?>.value(),
            returnValueForMissingStub:
                _i6.Future<List<_i20.Instructor>?>.value(),
          )
          as _i6.Future<List<_i20.Instructor>?>);

  @override
  _i6.Future<void> deleteInstructor(_i20.Instructor? instructor) =>
      (super.noSuchMethod(
            Invocation.method(#deleteInstructor, [instructor]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String?> addInstructor(_i20.Instructor? instructor) =>
      (super.noSuchMethod(
            Invocation.method(#addInstructor, [instructor]),
            returnValue: _i6.Future<String?>.value(),
            returnValueForMissingStub: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [SlotProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSlotProvider extends _i1.Mock implements _i21.SlotProvider {
  @override
  String get gymId =>
      (super.noSuchMethod(
            Invocation.getter(#gymId),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#gymId),
            ),
            returnValueForMissingStub: _i17.dummyValue<String>(
              this,
              Invocation.getter(#gymId),
            ),
          )
          as String);

  @override
  String get activityId =>
      (super.noSuchMethod(
            Invocation.getter(#activityId),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#activityId),
            ),
            returnValueForMissingStub: _i17.dummyValue<String>(
              this,
              Invocation.getter(#activityId),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<List<_i10.Slot>> getUpcomingSlots() =>
      (super.noSuchMethod(
            Invocation.method(#getUpcomingSlots, []),
            returnValue: _i6.Future<List<_i10.Slot>>.value(<_i10.Slot>[]),
            returnValueForMissingStub: _i6.Future<List<_i10.Slot>>.value(
              <_i10.Slot>[],
            ),
          )
          as _i6.Future<List<_i10.Slot>>);

  @override
  _i6.Future<void> createSlot(
    _i10.Slot? slot,
    String? recurrence,
    DateTime? until,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createSlot, [slot, recurrence, until]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> updateSlot(_i10.Slot? slot) =>
      (super.noSuchMethod(
            Invocation.method(#updateSlot, [slot]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> addUserToSlot(String? slotId) =>
      (super.noSuchMethod(
            Invocation.method(#addUserToSlot, [slotId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> deleteSlot(String? slotId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSlot, [slotId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PlatformService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformService extends _i1.Mock implements _i5.PlatformService {
  @override
  bool get isWeb =>
      (super.noSuchMethod(
            Invocation.getter(#isWeb),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get isMobile =>
      (super.noSuchMethod(
            Invocation.getter(#isMobile),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);
}

/// A class which mocks [MapProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapProvider extends _i1.Mock implements _i22.MapProvider {
  @override
  _i3.LatLng get savedPosition =>
      (super.noSuchMethod(
            Invocation.getter(#savedPosition),
            returnValue: _FakeLatLng_1(this, Invocation.getter(#savedPosition)),
            returnValueForMissingStub: _FakeLatLng_1(
              this,
              Invocation.getter(#savedPosition),
            ),
          )
          as _i3.LatLng);

  @override
  double get savedZoom =>
      (super.noSuchMethod(
            Invocation.getter(#savedZoom),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(
            Invocation.getter(#isInitialized),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  _i6.Future<_i4.Locations> getGymLocations(List<_i8.Gym>? gymList) =>
      (super.noSuchMethod(
            Invocation.method(#getGymLocations, [gymList]),
            returnValue: _i6.Future<_i4.Locations>.value(
              _FakeLocations_2(
                this,
                Invocation.method(#getGymLocations, [gymList]),
              ),
            ),
            returnValueForMissingStub: _i6.Future<_i4.Locations>.value(
              _FakeLocations_2(
                this,
                Invocation.method(#getGymLocations, [gymList]),
              ),
            ),
          )
          as _i6.Future<_i4.Locations>);

  @override
  _i6.Future<_i23.Position?> getUserLocation() =>
      (super.noSuchMethod(
            Invocation.method(#getUserLocation, []),
            returnValue: _i6.Future<_i23.Position?>.value(),
            returnValueForMissingStub: _i6.Future<_i23.Position?>.value(),
          )
          as _i6.Future<_i23.Position?>);

  @override
  Map<String, _i3.Marker> getMarkers(
    _i4.Locations? gyms, {
    dynamic Function(String, String)? onMarkerTap,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getMarkers, [gyms], {#onMarkerTap: onMarkerTap}),
            returnValue: <String, _i3.Marker>{},
            returnValueForMissingStub: <String, _i3.Marker>{},
          )
          as Map<String, _i3.Marker>);

  @override
  void saveMapState(_i3.LatLng? position, double? zoom) => super.noSuchMethod(
    Invocation.method(#saveMapState, [position, zoom]),
    returnValueForMissingStub: null,
  );

  @override
  void setInitialized(bool? value) => super.noSuchMethod(
    Invocation.method(#setInitialized, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [Position].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockPosition extends _i1.Mock implements _i23.Position {
  @override
  double get latitude =>
      (super.noSuchMethod(
            Invocation.getter(#latitude),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  double get longitude =>
      (super.noSuchMethod(
            Invocation.getter(#longitude),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  DateTime get timestamp =>
      (super.noSuchMethod(
            Invocation.getter(#timestamp),
            returnValue: _FakeDateTime_3(this, Invocation.getter(#timestamp)),
            returnValueForMissingStub: _FakeDateTime_3(
              this,
              Invocation.getter(#timestamp),
            ),
          )
          as DateTime);

  @override
  double get altitude =>
      (super.noSuchMethod(
            Invocation.getter(#altitude),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  double get altitudeAccuracy =>
      (super.noSuchMethod(
            Invocation.getter(#altitudeAccuracy),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  double get accuracy =>
      (super.noSuchMethod(
            Invocation.getter(#accuracy),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  double get heading =>
      (super.noSuchMethod(
            Invocation.getter(#heading),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  double get headingAccuracy =>
      (super.noSuchMethod(
            Invocation.getter(#headingAccuracy),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  double get speed =>
      (super.noSuchMethod(
            Invocation.getter(#speed),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  double get speedAccuracy =>
      (super.noSuchMethod(
            Invocation.getter(#speedAccuracy),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);

  @override
  bool get isMocked =>
      (super.noSuchMethod(
            Invocation.getter(#isMocked),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
            returnValueForMissingStub: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [ThemeProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeProvider extends _i1.Mock implements _i24.ThemeProvider {
  @override
  bool get isDarkMode =>
      (super.noSuchMethod(
            Invocation.getter(#isDarkMode),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  bool get followSystemTheme =>
      (super.noSuchMethod(
            Invocation.getter(#followSystemTheme),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  String get currentThemeMode =>
      (super.noSuchMethod(
            Invocation.getter(#currentThemeMode),
            returnValue: _i17.dummyValue<String>(
              this,
              Invocation.getter(#currentThemeMode),
            ),
            returnValueForMissingStub: _i17.dummyValue<String>(
              this,
              Invocation.getter(#currentThemeMode),
            ),
          )
          as String);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(
            Invocation.getter(#hasListeners),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  void updateSystemTheme(_i12.Brightness? systemBrightness) =>
      super.noSuchMethod(
        Invocation.method(#updateSystemTheme, [systemBrightness]),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> toggleTheme() =>
      (super.noSuchMethod(
            Invocation.method(#toggleTheme, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setFollowSystemTheme(bool? follow) =>
      (super.noSuchMethod(
            Invocation.method(#setFollowSystemTheme, [follow]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> setTheme(bool? isDark) =>
      (super.noSuchMethod(
            Invocation.method(#setTheme, [isDark]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> cycleTheme() =>
      (super.noSuchMethod(
            Invocation.method(#cycleTheme, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void refreshSystemTheme() => super.noSuchMethod(
    Invocation.method(#refreshSystemTheme, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
