// Mocks generated by Mockito 5.4.5 from annotations
// in gymme/test/service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:convert' as _i23;
import 'dart:io' as _i7;
import 'dart:typed_data' as _i24;

import 'package:add_2_calendar/add_2_calendar.dart' as _i13;
import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i3;
import 'package:geolocator/geolocator.dart' as _i26;
import 'package:google_maps_flutter/google_maps_flutter.dart' as _i27;
import 'package:google_maps_flutter_platform_interface/google_maps_flutter_platform_interface.dart'
    as _i6;
import 'package:gymme/content/map/map_service.dart' as _i25;
import 'package:gymme/models/activity_model.dart' as _i17;
import 'package:gymme/models/booking_model.dart' as _i10;
import 'package:gymme/models/booking_update_model.dart' as _i12;
import 'package:gymme/models/gym_model.dart' as _i15;
import 'package:gymme/models/instructor_model.dart' as _i21;
import 'package:gymme/models/location_model.dart' as _i5;
import 'package:gymme/models/slot_model.dart' as _i11;
import 'package:gymme/models/user_model.dart' as _i19;
import 'package:gymme/services/bookings_service.dart' as _i8;
import 'package:gymme/services/gym_service.dart' as _i14;
import 'package:gymme/services/instructor_service.dart' as _i20;
import 'package:gymme/services/slot_service.dart' as _i22;
import 'package:gymme/services/user_service.dart' as _i18;
import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFirebaseAuth_1 extends _i1.SmartFake implements _i3.FirebaseAuth {
  _FakeFirebaseAuth_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_2 extends _i1.SmartFake implements _i4.Response {
  _FakeResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_3 extends _i1.SmartFake
    implements _i4.StreamedResponse {
  _FakeStreamedResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLocations_4 extends _i1.SmartFake implements _i5.Locations {
  _FakeLocations_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLatLngBounds_5 extends _i1.SmartFake implements _i6.LatLngBounds {
  _FakeLatLngBounds_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeScreenCoordinate_6 extends _i1.SmartFake
    implements _i6.ScreenCoordinate {
  _FakeScreenCoordinate_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLatLng_7 extends _i1.SmartFake implements _i6.LatLng {
  _FakeLatLng_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDuration_8 extends _i1.SmartFake implements Duration {
  _FakeDuration_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeHttpClientRequest_9 extends _i1.SmartFake
    implements _i7.HttpClientRequest {
  _FakeHttpClientRequest_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [BookingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingsService extends _i1.Mock implements _i8.BookingsService {
  @override
  _i2.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_0(
              this,
              Invocation.getter(#firestore),
            ),
            returnValueForMissingStub: _FakeFirebaseFirestore_0(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i2.FirebaseFirestore);

  @override
  _i3.FirebaseAuth get firebaseAuth =>
      (super.noSuchMethod(
            Invocation.getter(#firebaseAuth),
            returnValue: _FakeFirebaseAuth_1(
              this,
              Invocation.getter(#firebaseAuth),
            ),
            returnValueForMissingStub: _FakeFirebaseAuth_1(
              this,
              Invocation.getter(#firebaseAuth),
            ),
          )
          as _i3.FirebaseAuth);

  @override
  _i9.Future<List<_i10.Booking>> fetchBookings() =>
      (super.noSuchMethod(
            Invocation.method(#fetchBookings, []),
            returnValue: _i9.Future<List<_i10.Booking>>.value(<_i10.Booking>[]),
            returnValueForMissingStub: _i9.Future<List<_i10.Booking>>.value(
              <_i10.Booking>[],
            ),
          )
          as _i9.Future<List<_i10.Booking>>);

  @override
  _i9.Future<String?> addBooking(_i10.Booking? booking, _i11.Slot? slot) =>
      (super.noSuchMethod(
            Invocation.method(#addBooking, [booking, slot]),
            returnValue: _i9.Future<String?>.value(),
            returnValueForMissingStub: _i9.Future<String?>.value(),
          )
          as _i9.Future<String?>);

  @override
  _i9.Future<void> deleteBooking(_i10.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#deleteBooking, [booking]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> markUpdateAsRead(_i12.BookingUpdate? bookingUpdate) =>
      (super.noSuchMethod(
            Invocation.method(#markUpdateAsRead, [bookingUpdate]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  void addToCalendarWeb(String? url) => super.noSuchMethod(
    Invocation.method(#addToCalendarWeb, [url]),
    returnValueForMissingStub: null,
  );

  @override
  void addToCalendarMobile(_i13.Event? event) => super.noSuchMethod(
    Invocation.method(#addToCalendarMobile, [event]),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<void> goToPayment(_i10.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#goToPayment, [booking]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> confirmPayment(String? bookingId) =>
      (super.noSuchMethod(
            Invocation.method(#confirmPayment, [bookingId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [GymService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGymService extends _i1.Mock implements _i14.GymService {
  @override
  _i9.Future<List<_i15.Gym>> fetchGymList() =>
      (super.noSuchMethod(
            Invocation.method(#fetchGymList, []),
            returnValue: _i9.Future<List<_i15.Gym>>.value(<_i15.Gym>[]),
            returnValueForMissingStub: _i9.Future<List<_i15.Gym>>.value(
              <_i15.Gym>[],
            ),
          )
          as _i9.Future<List<_i15.Gym>>);

  @override
  _i9.Future<String> addGym(_i15.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#addGym, [gym]),
            returnValue: _i9.Future<String>.value(
              _i16.dummyValue<String>(this, Invocation.method(#addGym, [gym])),
            ),
            returnValueForMissingStub: _i9.Future<String>.value(
              _i16.dummyValue<String>(this, Invocation.method(#addGym, [gym])),
            ),
          )
          as _i9.Future<String>);

  @override
  _i9.Future<void> updateGym(_i15.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#updateGym, [gym]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> deleteGym(String? gymId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteGym, [gymId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setActivity(_i15.Gym? gym) =>
      (super.noSuchMethod(
            Invocation.method(#setActivity, [gym]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> deleteActivity(_i15.Gym? gym, _i17.Activity? activity) =>
      (super.noSuchMethod(
            Invocation.method(#deleteActivity, [gym, activity]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<String> uploadImage(String? base64Image) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [base64Image]),
            returnValue: _i9.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
          )
          as _i9.Future<String>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i18.UserService {
  @override
  _i3.FirebaseAuth get firebaseAuth =>
      (super.noSuchMethod(
            Invocation.getter(#firebaseAuth),
            returnValue: _FakeFirebaseAuth_1(
              this,
              Invocation.getter(#firebaseAuth),
            ),
            returnValueForMissingStub: _FakeFirebaseAuth_1(
              this,
              Invocation.getter(#firebaseAuth),
            ),
          )
          as _i3.FirebaseAuth);

  @override
  set firebaseAuth(_i3.FirebaseAuth? _firebaseAuth) => super.noSuchMethod(
    Invocation.setter(#firebaseAuth, _firebaseAuth),
    returnValueForMissingStub: null,
  );

  @override
  _i2.FirebaseFirestore get firestore =>
      (super.noSuchMethod(
            Invocation.getter(#firestore),
            returnValue: _FakeFirebaseFirestore_0(
              this,
              Invocation.getter(#firestore),
            ),
            returnValueForMissingStub: _FakeFirebaseFirestore_0(
              this,
              Invocation.getter(#firestore),
            ),
          )
          as _i2.FirebaseFirestore);

  @override
  set firestore(_i2.FirebaseFirestore? _firestore) => super.noSuchMethod(
    Invocation.setter(#firestore, _firestore),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<_i3.UserCredential?> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [email, password]),
            returnValue: _i9.Future<_i3.UserCredential?>.value(),
            returnValueForMissingStub: _i9.Future<_i3.UserCredential?>.value(),
          )
          as _i9.Future<_i3.UserCredential?>);

  @override
  _i9.Future<_i3.UserCredential?> signInWithGoogle() =>
      (super.noSuchMethod(
            Invocation.method(#signInWithGoogle, []),
            returnValue: _i9.Future<_i3.UserCredential?>.value(),
            returnValueForMissingStub: _i9.Future<_i3.UserCredential?>.value(),
          )
          as _i9.Future<_i3.UserCredential?>);

  @override
  _i9.Future<_i3.UserCredential?> signUpWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUpWithEmailAndPassword, [email, password]),
            returnValue: _i9.Future<_i3.UserCredential?>.value(),
            returnValueForMissingStub: _i9.Future<_i3.UserCredential?>.value(),
          )
          as _i9.Future<_i3.UserCredential?>);

  @override
  _i9.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<_i19.User?> fetchUser(_i3.User? firebaseUser) =>
      (super.noSuchMethod(
            Invocation.method(#fetchUser, [firebaseUser]),
            returnValue: _i9.Future<_i19.User?>.value(),
            returnValueForMissingStub: _i9.Future<_i19.User?>.value(),
          )
          as _i9.Future<_i19.User?>);

  @override
  _i9.Future<void> createUser(_i19.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [user]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> resetPassword(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [email]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> updateUserFavourites(_i19.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserFavourites, [user]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<List<_i19.User>> fetchUsers() =>
      (super.noSuchMethod(
            Invocation.method(#fetchUsers, []),
            returnValue: _i9.Future<List<_i19.User>>.value(<_i19.User>[]),
            returnValueForMissingStub: _i9.Future<List<_i19.User>>.value(
              <_i19.User>[],
            ),
          )
          as _i9.Future<List<_i19.User>>);

  @override
  _i9.Future<void> updateUserProfile(_i19.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserProfile, [user]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setSubscription(_i19.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#setSubscription, [user]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> updateMedicalCertificate(
    String? uid,
    DateTime? certificateExpDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateMedicalCertificate, [
              uid,
              certificateExpDate,
            ]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> removeAccount(String? uid) =>
      (super.noSuchMethod(
            Invocation.method(#removeAccount, [uid]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<String> uploadImage(String? base64Image) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [base64Image]),
            returnValue: _i9.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#uploadImage, [base64Image]),
              ),
            ),
          )
          as _i9.Future<String>);
}

/// A class which mocks [InstructorService].
///
/// See the documentation for Mockito's code generation for more information.
class MockInstructorService extends _i1.Mock implements _i20.InstructorService {
  @override
  _i9.Future<List<_i21.Instructor>> fetchInstructors() =>
      (super.noSuchMethod(
            Invocation.method(#fetchInstructors, []),
            returnValue: _i9.Future<List<_i21.Instructor>>.value(
              <_i21.Instructor>[],
            ),
            returnValueForMissingStub: _i9.Future<List<_i21.Instructor>>.value(
              <_i21.Instructor>[],
            ),
          )
          as _i9.Future<List<_i21.Instructor>>);

  @override
  _i9.Future<_i21.Instructor?> fetchInstructorById(String? instructorId) =>
      (super.noSuchMethod(
            Invocation.method(#fetchInstructorById, [instructorId]),
            returnValue: _i9.Future<_i21.Instructor?>.value(),
            returnValueForMissingStub: _i9.Future<_i21.Instructor?>.value(),
          )
          as _i9.Future<_i21.Instructor?>);

  @override
  _i9.Future<String?> addInstructor(_i21.Instructor? instructor) =>
      (super.noSuchMethod(
            Invocation.method(#addInstructor, [instructor]),
            returnValue: _i9.Future<String?>.value(),
            returnValueForMissingStub: _i9.Future<String?>.value(),
          )
          as _i9.Future<String?>);

  @override
  _i9.Future<void> deleteInstructor(_i21.Instructor? instructor) =>
      (super.noSuchMethod(
            Invocation.method(#deleteInstructor, [instructor]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [SlotService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSlotService extends _i1.Mock implements _i22.SlotService {
  @override
  _i9.Future<List<_i11.Slot>> fetchUpcomingSlots(
    String? gymId,
    String? activityId,
    DateTime? date,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchUpcomingSlots, [gymId, activityId, date]),
            returnValue: _i9.Future<List<_i11.Slot>>.value(<_i11.Slot>[]),
            returnValueForMissingStub: _i9.Future<List<_i11.Slot>>.value(
              <_i11.Slot>[],
            ),
          )
          as _i9.Future<List<_i11.Slot>>);

  @override
  _i9.Future<void> createSlot(_i11.Slot? slot) =>
      (super.noSuchMethod(
            Invocation.method(#createSlot, [slot]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> updateSlot(_i11.Slot? slot) =>
      (super.noSuchMethod(
            Invocation.method(#updateSlot, [slot]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> deleteSlot(String? slotId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSlot, [slotId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i4.Client {
  @override
  _i9.Future<_i4.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i9.Future<_i4.Response>);

  @override
  _i9.Future<_i4.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i9.Future<_i4.Response>);

  @override
  _i9.Future<_i4.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i4.Response>);

  @override
  _i9.Future<_i4.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i4.Response>);

  @override
  _i9.Future<_i4.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i4.Response>);

  @override
  _i9.Future<_i4.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i23.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i4.Response>.value(
              _FakeResponse_2(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i9.Future<_i4.Response>);

  @override
  _i9.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i9.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i9.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i9.Future<String>);

  @override
  _i9.Future<_i24.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i9.Future<_i24.Uint8List>.value(_i24.Uint8List(0)),
            returnValueForMissingStub: _i9.Future<_i24.Uint8List>.value(
              _i24.Uint8List(0),
            ),
          )
          as _i9.Future<_i24.Uint8List>);

  @override
  _i9.Future<_i4.StreamedResponse> send(_i4.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i9.Future<_i4.StreamedResponse>.value(
              _FakeStreamedResponse_3(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i4.StreamedResponse>.value(
              _FakeStreamedResponse_3(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i9.Future<_i4.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [MapService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapService extends _i1.Mock implements _i25.MapService {
  @override
  _i9.Future<_i26.LocationPermission> checkLocationPermission() =>
      (super.noSuchMethod(
            Invocation.method(#checkLocationPermission, []),
            returnValue: _i9.Future<_i26.LocationPermission>.value(
              _i26.LocationPermission.denied,
            ),
            returnValueForMissingStub:
                _i9.Future<_i26.LocationPermission>.value(
                  _i26.LocationPermission.denied,
                ),
          )
          as _i9.Future<_i26.LocationPermission>);

  @override
  _i9.Future<_i26.LocationPermission> requestLocationPermission() =>
      (super.noSuchMethod(
            Invocation.method(#requestLocationPermission, []),
            returnValue: _i9.Future<_i26.LocationPermission>.value(
              _i26.LocationPermission.denied,
            ),
            returnValueForMissingStub:
                _i9.Future<_i26.LocationPermission>.value(
                  _i26.LocationPermission.denied,
                ),
          )
          as _i9.Future<_i26.LocationPermission>);

  @override
  _i9.Future<_i26.Position?> fetchUserLocation() =>
      (super.noSuchMethod(
            Invocation.method(#fetchUserLocation, []),
            returnValue: _i9.Future<_i26.Position?>.value(),
            returnValueForMissingStub: _i9.Future<_i26.Position?>.value(),
          )
          as _i9.Future<_i26.Position?>);

  @override
  _i9.Future<_i5.Locations> fetchGymLocations(List<_i15.Gym>? gymList) =>
      (super.noSuchMethod(
            Invocation.method(#fetchGymLocations, [gymList]),
            returnValue: _i9.Future<_i5.Locations>.value(
              _FakeLocations_4(
                this,
                Invocation.method(#fetchGymLocations, [gymList]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i5.Locations>.value(
              _FakeLocations_4(
                this,
                Invocation.method(#fetchGymLocations, [gymList]),
              ),
            ),
          )
          as _i9.Future<_i5.Locations>);
}

/// A class which mocks [GoogleMapController].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoogleMapController extends _i1.Mock
    implements _i27.GoogleMapController {
  @override
  int get mapId =>
      (super.noSuchMethod(
            Invocation.getter(#mapId),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  _i9.Future<void> clearTileCache(_i6.TileOverlayId? tileOverlayId) =>
      (super.noSuchMethod(
            Invocation.method(#clearTileCache, [tileOverlayId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> animateCamera(
    _i6.CameraUpdate? cameraUpdate, {
    Duration? duration,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #animateCamera,
              [cameraUpdate],
              {#duration: duration},
            ),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> moveCamera(_i6.CameraUpdate? cameraUpdate) =>
      (super.noSuchMethod(
            Invocation.method(#moveCamera, [cameraUpdate]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> setMapStyle(String? mapStyle) =>
      (super.noSuchMethod(
            Invocation.method(#setMapStyle, [mapStyle]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<String?> getStyleError() =>
      (super.noSuchMethod(
            Invocation.method(#getStyleError, []),
            returnValue: _i9.Future<String?>.value(),
            returnValueForMissingStub: _i9.Future<String?>.value(),
          )
          as _i9.Future<String?>);

  @override
  _i9.Future<_i6.LatLngBounds> getVisibleRegion() =>
      (super.noSuchMethod(
            Invocation.method(#getVisibleRegion, []),
            returnValue: _i9.Future<_i6.LatLngBounds>.value(
              _FakeLatLngBounds_5(
                this,
                Invocation.method(#getVisibleRegion, []),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i6.LatLngBounds>.value(
              _FakeLatLngBounds_5(
                this,
                Invocation.method(#getVisibleRegion, []),
              ),
            ),
          )
          as _i9.Future<_i6.LatLngBounds>);

  @override
  _i9.Future<_i6.ScreenCoordinate> getScreenCoordinate(_i6.LatLng? latLng) =>
      (super.noSuchMethod(
            Invocation.method(#getScreenCoordinate, [latLng]),
            returnValue: _i9.Future<_i6.ScreenCoordinate>.value(
              _FakeScreenCoordinate_6(
                this,
                Invocation.method(#getScreenCoordinate, [latLng]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i6.ScreenCoordinate>.value(
              _FakeScreenCoordinate_6(
                this,
                Invocation.method(#getScreenCoordinate, [latLng]),
              ),
            ),
          )
          as _i9.Future<_i6.ScreenCoordinate>);

  @override
  _i9.Future<_i6.LatLng> getLatLng(_i6.ScreenCoordinate? screenCoordinate) =>
      (super.noSuchMethod(
            Invocation.method(#getLatLng, [screenCoordinate]),
            returnValue: _i9.Future<_i6.LatLng>.value(
              _FakeLatLng_7(
                this,
                Invocation.method(#getLatLng, [screenCoordinate]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i6.LatLng>.value(
              _FakeLatLng_7(
                this,
                Invocation.method(#getLatLng, [screenCoordinate]),
              ),
            ),
          )
          as _i9.Future<_i6.LatLng>);

  @override
  _i9.Future<void> showMarkerInfoWindow(_i6.MarkerId? markerId) =>
      (super.noSuchMethod(
            Invocation.method(#showMarkerInfoWindow, [markerId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<void> hideMarkerInfoWindow(_i6.MarkerId? markerId) =>
      (super.noSuchMethod(
            Invocation.method(#hideMarkerInfoWindow, [markerId]),
            returnValue: _i9.Future<void>.value(),
            returnValueForMissingStub: _i9.Future<void>.value(),
          )
          as _i9.Future<void>);

  @override
  _i9.Future<bool> isMarkerInfoWindowShown(_i6.MarkerId? markerId) =>
      (super.noSuchMethod(
            Invocation.method(#isMarkerInfoWindowShown, [markerId]),
            returnValue: _i9.Future<bool>.value(false),
            returnValueForMissingStub: _i9.Future<bool>.value(false),
          )
          as _i9.Future<bool>);

  @override
  _i9.Future<double> getZoomLevel() =>
      (super.noSuchMethod(
            Invocation.method(#getZoomLevel, []),
            returnValue: _i9.Future<double>.value(0.0),
            returnValueForMissingStub: _i9.Future<double>.value(0.0),
          )
          as _i9.Future<double>);

  @override
  _i9.Future<_i24.Uint8List?> takeSnapshot() =>
      (super.noSuchMethod(
            Invocation.method(#takeSnapshot, []),
            returnValue: _i9.Future<_i24.Uint8List?>.value(),
            returnValueForMissingStub: _i9.Future<_i24.Uint8List?>.value(),
          )
          as _i9.Future<_i24.Uint8List?>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [HttpClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.HttpClient {
  @override
  Duration get idleTimeout =>
      (super.noSuchMethod(
            Invocation.getter(#idleTimeout),
            returnValue: _FakeDuration_8(this, Invocation.getter(#idleTimeout)),
            returnValueForMissingStub: _FakeDuration_8(
              this,
              Invocation.getter(#idleTimeout),
            ),
          )
          as Duration);

  @override
  set idleTimeout(Duration? _idleTimeout) => super.noSuchMethod(
    Invocation.setter(#idleTimeout, _idleTimeout),
    returnValueForMissingStub: null,
  );

  @override
  set connectionTimeout(Duration? _connectionTimeout) => super.noSuchMethod(
    Invocation.setter(#connectionTimeout, _connectionTimeout),
    returnValueForMissingStub: null,
  );

  @override
  set maxConnectionsPerHost(int? _maxConnectionsPerHost) => super.noSuchMethod(
    Invocation.setter(#maxConnectionsPerHost, _maxConnectionsPerHost),
    returnValueForMissingStub: null,
  );

  @override
  bool get autoUncompress =>
      (super.noSuchMethod(
            Invocation.getter(#autoUncompress),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  set autoUncompress(bool? _autoUncompress) => super.noSuchMethod(
    Invocation.setter(#autoUncompress, _autoUncompress),
    returnValueForMissingStub: null,
  );

  @override
  set userAgent(String? _userAgent) => super.noSuchMethod(
    Invocation.setter(#userAgent, _userAgent),
    returnValueForMissingStub: null,
  );

  @override
  set authenticate(_i9.Future<bool> Function(Uri, String, String?)? f) =>
      super.noSuchMethod(
        Invocation.setter(#authenticate, f),
        returnValueForMissingStub: null,
      );

  @override
  set connectionFactory(
    _i9.Future<_i7.ConnectionTask<_i7.Socket>> Function(Uri, String?, int?)? f,
  ) => super.noSuchMethod(
    Invocation.setter(#connectionFactory, f),
    returnValueForMissingStub: null,
  );

  @override
  set findProxy(String Function(Uri)? f) => super.noSuchMethod(
    Invocation.setter(#findProxy, f),
    returnValueForMissingStub: null,
  );

  @override
  set authenticateProxy(
    _i9.Future<bool> Function(String, int, String, String?)? f,
  ) => super.noSuchMethod(
    Invocation.setter(#authenticateProxy, f),
    returnValueForMissingStub: null,
  );

  @override
  set badCertificateCallback(
    bool Function(_i7.X509Certificate, String, int)? callback,
  ) => super.noSuchMethod(
    Invocation.setter(#badCertificateCallback, callback),
    returnValueForMissingStub: null,
  );

  @override
  set keyLog(dynamic Function(String)? callback) => super.noSuchMethod(
    Invocation.setter(#keyLog, callback),
    returnValueForMissingStub: null,
  );

  @override
  _i9.Future<_i7.HttpClientRequest> open(
    String? method,
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#open, [method, host, port, path]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#open, [method, host, port, path]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#open, [method, host, port, path]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> openUrl(String? method, Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#openUrl, [method, url]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#openUrl, [method, url]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#openUrl, [method, url]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> get(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#get, [host, port, path]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#get, [host, port, path]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#get, [host, port, path]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> getUrl(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#getUrl, [url]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(this, Invocation.method(#getUrl, [url])),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(this, Invocation.method(#getUrl, [url])),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> post(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#post, [host, port, path]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#post, [host, port, path]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#post, [host, port, path]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> postUrl(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#postUrl, [url]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#postUrl, [url]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#postUrl, [url]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> put(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#put, [host, port, path]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#put, [host, port, path]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#put, [host, port, path]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> putUrl(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#putUrl, [url]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(this, Invocation.method(#putUrl, [url])),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(this, Invocation.method(#putUrl, [url])),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> delete(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [host, port, path]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#delete, [host, port, path]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#delete, [host, port, path]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> deleteUrl(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUrl, [url]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#deleteUrl, [url]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#deleteUrl, [url]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> patch(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#patch, [host, port, path]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#patch, [host, port, path]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#patch, [host, port, path]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> patchUrl(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#patchUrl, [url]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#patchUrl, [url]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#patchUrl, [url]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> head(
    String? host,
    int? port,
    String? path,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#head, [host, port, path]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#head, [host, port, path]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#head, [host, port, path]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  _i9.Future<_i7.HttpClientRequest> headUrl(Uri? url) =>
      (super.noSuchMethod(
            Invocation.method(#headUrl, [url]),
            returnValue: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#headUrl, [url]),
              ),
            ),
            returnValueForMissingStub: _i9.Future<_i7.HttpClientRequest>.value(
              _FakeHttpClientRequest_9(
                this,
                Invocation.method(#headUrl, [url]),
              ),
            ),
          )
          as _i9.Future<_i7.HttpClientRequest>);

  @override
  void addCredentials(
    Uri? url,
    String? realm,
    _i7.HttpClientCredentials? credentials,
  ) => super.noSuchMethod(
    Invocation.method(#addCredentials, [url, realm, credentials]),
    returnValueForMissingStub: null,
  );

  @override
  void addProxyCredentials(
    String? host,
    int? port,
    String? realm,
    _i7.HttpClientCredentials? credentials,
  ) => super.noSuchMethod(
    Invocation.method(#addProxyCredentials, [host, port, realm, credentials]),
    returnValueForMissingStub: null,
  );

  @override
  void close({bool? force = false}) => super.noSuchMethod(
    Invocation.method(#close, [], {#force: force}),
    returnValueForMissingStub: null,
  );
}
